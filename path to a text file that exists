langserver-go: reading on stdin, writing on stdout
--> request #0: initialize: {"processId":26565,"rootPath":"/Users/alixez/Workspace/go/src/iunite.club","rootUri":"file:///Users/alixez/Workspace/go/src/iunite.club","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"]}},"definition":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"codeAction":{"dynamicRegistration":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"typeDefinition":{"dynamicRegistration":true},"implementation":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true}}},"initializationOptions":{"funcSnippetEnabled":false,"gocodeCompletionEnabled":true},"trace":"off","workspaceFolders":[{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club","name":"iunite.club"},{"uri":"file:///Users/alixez/Workspace/go/src/github.com/iron-kit/go-ironic","name":"go-ironic"},{"uri":"file:///Users/alixez/Workspace/go/src/github.com/iron-kit/ironic","name":"ironic"},{"uri":"file:///Users/alixez/Workspace/go/src/swigger-ui","name":"swigger-ui"},{"uri":"file:///Users/alixez/Workspace/go/src/github.com/iron-kit/monger","name":"monger"}]}
Passing an initialize rootPath URI ("file:///Users/alixez/Workspace/go/src/iunite.club") is deprecated. Use rootUri instead.
<-- result #0: initialize: {"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":["."]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"typeDefinitionProvider":true,"referencesProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"implementationProvider":true,"documentFormattingProvider":true,"xworkspaceReferencesProvider":true,"xdefinitionProvider":true,"xworkspaceSymbolByProperties":true}}
--> notif: initialized: {}
--> notif: textDocument/didOpen: {"textDocument":{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club/services/restful/handler/recruitment.go","languageId":"go","version":1,"text":"package handler\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"github.com/iron-kit/go-ironic\"\n\n\trestful \"github.com/emicklei/go-restful\"\n\t\"github.com/iron-kit/go-ironic/protobuf/hptypes\"\n\t\"github.com/micro/go-micro/client\"\n\t\"github.com/skip2/go-qrcode\"\n\trecruitmentPB \"iunite.club/services/core/proto/recruitment\"\n\t\"iunite.club/services/restful/dto\"\n)\n\ntype RecruitmentHandler struct {\n\tBaseHandler\n\n\trecruitmentService recruitmentPB.RecruitmentService\n}\n\nfunc NewRecruitmentHandler(c client.Client) *RecruitmentHandler {\n\treturn \u0026RecruitmentHandler{\n\t\trecruitmentService: recruitmentPB.NewRecruitmentService(CoreService, c),\n\t}\n}\n\nfunc (self *RecruitmentHandler) AdjustOnePost(req *restful.Request, rsp *restful.Response) {\n\tparams := struct {\n\t\tID           string `json:\"id\"`\n\t\tDepartmentID string `json:\"dept\"`\n\t}{}\n\tctx := context.Background()\n\n\tif err := self.Bind(req, \u0026params); err != nil {\n\t\tErrorResponse(rsp, self.Error().BadRequest(err.Error()))\n\t\treturn\n\t}\n\n\tif err := self.Validate(\u0026params); err != nil {\n\t\tErrorResponse(rsp, self.Error().BadRequest(err.Error()))\n\t\treturn\n\t}\n\n\t_, err := self.recruitmentService.AdjustOnePost(ctx, \u0026recruitmentPB.AdjustOnePostRequest{\n\t\tID:           params.ID,\n\t\tDepartmentID: params.DepartmentID,\n\t})\n\n\tif err != nil {\n\t\tErrorResponse(rsp, err)\n\t\treturn\n\t}\n\n\tSuccessResponse(rsp, D{})\n\treturn\n}\n\nfunc (self *RecruitmentHandler) PassedOnePost(req *restful.Request, rsp *restful.Response) {\n\tparams := struct {\n\t\tID string `json:\"id,omitempty\"`\n\t}{}\n\tctx := context.Background()\n\n\tif err := self.Bind(req, \u0026params); err != nil {\n\t\tErrorResponse(rsp, self.Error().BadRequest(err.Error()))\n\t\treturn\n\t}\n\n\tif err := self.Validate(\u0026params); err != nil {\n\t\tErrorResponse(rsp, self.Error().BadRequest(err.Error()))\n\t\treturn\n\t}\n\n\tpassedResp, err := self.recruitmentService.PassedOnePost(ctx, \u0026recruitmentPB.PassedOnePostRequest{\n\t\tID: params.ID,\n\t})\n\n\tif err != nil {\n\t\tErrorResponse(rsp, err)\n\t}\n\n\tif !passedResp.OK {\n\t\tErrorResponse(rsp, self.Error().BadRequest(\"error action\"))\n\t}\n\n\tSuccessResponse(rsp, D{})\n\treturn\n}\n\nfunc (self *RecruitmentHandler) RefusedOnePost(req *restful.Request, rsp *restful.Response) {\n\tparams := struct {\n\t\tID string `json:\"id,omitempty\"`\n\t}{}\n\tctx := context.Background()\n\n\tif err := self.Bind(req, \u0026params); err != nil {\n\t\tErrorResponse(rsp, self.Error().BadRequest(err.Error()))\n\t\treturn\n\t}\n\n\tif err := self.Validate(\u0026params); err != nil {\n\t\tErrorResponse(rsp, self.Error().BadRequest(err.Error()))\n\t\treturn\n\t}\n\n\t_, err := self.recruitmentService.RefusedOnePost(ctx, \u0026recruitmentPB.RefusedOnePostRequest{\n\t\tID: params.ID,\n\t})\n\n\tif err != nil {\n\t\tErrorResponse(rsp, err)\n\t\treturn\n\t}\n\n\tSuccessResponse(rsp, D{})\n\treturn\n}\n\nfunc (self *RecruitmentHandler) GetLastestRecruitmentRecord(req *restful.Request, rsp *restful.Response) {\n\tparams := struct {\n\t\tClubID string `query:\"org\"`\n\t}{}\n\tctx := context.Background()\n\n\tif err := self.Bind(req, \u0026params); err != nil {\n\t\tErrorResponse(rsp, self.Error().BadRequest(err.Error()))\n\t\treturn\n\t}\n\n\tif err := self.Validate(\u0026params); err != nil {\n\t\tErrorResponse(rsp, self.Error().BadRequest(err.Error()))\n\t\treturn\n\t}\n\n\trecordResp, err := self.recruitmentService.FindLatestRecruitmentRecord(ctx, \u0026recruitmentPB.ByClubIDRequest{ClubID: params.ClubID})\n\tif err != nil {\n\t\tErrorResponse(rsp, err)\n\t\treturn\n\t}\n\n\tSuccessResponse(rsp, D{\n\t\t\"Record\": dto.PBToRecruitmentRecord(recordResp.Record),\n\t})\n\n\treturn\n}\n\nfunc (self *RecruitmentHandler) AddRecruitmentRecord(req *restful.Request, rsp *restful.Response) {\n\tparams := struct {\n\t\tCreator      string `json:\"userID,omitempty\"`\n\t\tOrganization string `json:\"organization,omitempty\"`\n\t\tFormID       string `json:\"formID,omitempty\"`\n\t}{}\n\tctx := context.Background()\n\n\tif err := self.Bind(req, \u0026params); err != nil {\n\t\tErrorResponse(rsp, self.Error().BadRequest(err.Error()))\n\t\treturn\n\t}\n\n\tif err := self.Validate(\u0026params); err != nil {\n\t\tErrorResponse(rsp, self.Error().BadRequest(err.Error()))\n\t\treturn\n\t}\n\n\tif _, err := self.recruitmentService.AddRecruitmentRecord(ctx, \u0026recruitmentPB.ByRecruitmentRecordBundle{\n\t\tClubID: params.Organization,\n\t\tUserID: self.GetUserIDFromRequest(req),\n\t}); err != nil {\n\t\tErrorResponse(rsp, self.Error().BadRequest(err.Error()))\n\t\treturn\n\t}\n\n\tSuccessResponse(rsp, D{})\n\treturn\n}\n\nfunc (self *RecruitmentHandler) AddRecruitmentForm(req *restful.Request, rsp *restful.Response) {\n\ttype Option struct {\n\t\tValue string `json:\"value\"`\n\t\tName  string `json:\"name\"`\n\t}\n\n\ttype FormItem struct {\n\t\tKey     string   `json:\"key\"`\n\t\tLabel   string   `json:\"label\"`\n\t\tKind    string   `json:\"kind\"`\n\t\tOptions []Option `json:\"options\"`\n\t}\n\n\tparams := struct {\n\t\tRecordID     string     `json:\"recordID\"`\n\t\tOrganization string     `json:\"organization\"`\n\t\tFormConfig   []FormItem `json:\"formConfig\"`\n\t}{}\n\n\tctx := context.Background()\n\n\tif err := self.Bind(req, \u0026params); err != nil {\n\t\tErrorResponse(rsp, self.Error().BadRequest(err.Error()))\n\t\treturn\n\t}\n\n\tif err := self.Validate(\u0026params); err != nil {\n\t\tErrorResponse(rsp, self.Error().BadRequest(err.Error()))\n\t\treturn\n\t}\n\n\tfields := make([]*recruitmentPB.RecruitmentFormField, 0)\n\tif len(params.FormConfig) \u003e 0 {\n\t\tfor index, f := range params.FormConfig {\n\t\t\topts := map[string]interface{}{\n\t\t\t\t\"Opts\": f.Options,\n\t\t\t}\n\t\t\tfields = append(fields, \u0026recruitmentPB.RecruitmentFormField{\n\t\t\t\tSubject: f.Label,\n\t\t\t\tKey:     f.Key,\n\t\t\t\tOptions: hptypes.EncodeToStruct(opts),\n\t\t\t\tSort:    int32(index),\n\t\t\t})\n\t\t}\n\n\t}\n\n\t_, err := self.recruitmentService.AddRecruitmentForm(ctx, \u0026recruitmentPB.ByRecruitmentFormBundle{\n\t\tRecordID: params.RecordID,\n\t\tClubID:   params.Organization,\n\t\tUserID:   self.GetUserIDFromRequest(req),\n\t\tRecordForm: \u0026recruitmentPB.RecruitmentForm{\n\t\t\tFields: fields,\n\t\t},\n\t})\n\n\tif err != nil {\n\t\tErrorResponse(rsp, err)\n\t\treturn\n\t}\n\n\tSuccessResponse(rsp, D{})\n}\n\nfunc (self *RecruitmentHandler) GetRecruitmentFormDetails(req *restful.Request, rsp *restful.Response) {\n\tparams := struct {\n\t\tID string `query:\"id`\n\t}{}\n\n\tctx := context.Background()\n\n\tif err := self.Bind(req, \u0026params); err != nil {\n\t\tErrorResponse(rsp, self.Error().BadRequest(err.Error()))\n\t\treturn\n\t}\n\tif err := self.Validate(\u0026params); err != nil {\n\t\tErrorResponse(rsp, self.Error().BadRequest(err.Error()))\n\t\treturn\n\t}\n\n\tformRsp, err := self.recruitmentService.FindRecruitmentFormDetails(ctx, \u0026recruitmentPB.ByRecruitmentFormID{ID: params.ID})\n\n\tif err != nil {\n\t\tErrorResponse(rsp, err)\n\t\treturn\n\t}\n\n\tSuccessResponse(rsp, D{\n\t\t\"FormDetails\": dto.PBToRecruitmentForm(formRsp.Form),\n\t})\n\n\treturn\n}\n\nfunc (self *RecruitmentHandler) GetRecruitmentRecordDetails(req *restful.Request, rsp *restful.Response) {\n\tparams := struct {\n\t\tID string `query:\"id`\n\t}{}\n\n\tctx := context.Background()\n\n\tif err := self.Bind(req, \u0026params); err != nil {\n\t\tErrorResponse(rsp, self.Error().BadRequest(err.Error()))\n\t\treturn\n\t}\n\tif err := self.Validate(\u0026params); err != nil {\n\t\tErrorResponse(rsp, self.Error().BadRequest(err.Error()))\n\t\treturn\n\t}\n\n\tdetailsResp, err := self.recruitmentService.FindRecruitmentRecordDetails(ctx, \u0026recruitmentPB.ByRecruitmentID{ID: params.ID})\n\tif err != nil {\n\t\tErrorResponse(rsp, err)\n\t\treturn\n\t}\n\n\tSuccessResponse(rsp, D{\n\t\t\"RecordDetails\": dto.PBToRecruitmentRecord(detailsResp.Record),\n\t})\n\treturn\n}\nfunc (self *RecruitmentHandler) AddRecruitmentFormRecord(req *restful.Request, rsp *restful.Response) {\n\n\ttype AnswerItem struct {\n\t\tItemID string `json:\"itemID\"`\n\t\tAnswer string `json:\"answer\"`\n\t}\n\n\tparams := struct {\n\t\tMobile          string       `json:\"mobile,omitempty\"`\n\t\tName            string       `json:\"name,omitempty\"`\n\t\tMajor           string       `json:\"major,omitempty\"`\n\t\tAge             int32        `json:\"age,omitempty\"`\n\t\tSchoolStudentID string       `json:\"school_student_id,omitempty\"`\n\t\tRecordID        string       `json:\"record_id,omitempty\"`\n\t\tDepartment      string       `json:\"department,omitempty\"`\n\t\tAnswers         []AnswerItem `json:\"answers,omitempty\"`\n\t}{}\n\n\tctx := context.Background()\n\n\tif err := self.Bind(req, \u0026params); err != nil {\n\t\tErrorResponse(rsp, self.Error().BadRequest(err.Error()))\n\t\treturn\n\t}\n\n\tif err := self.Validate(\u0026params); err != nil {\n\t\tErrorResponse(rsp, self.Error().BadRequest(err.Error()))\n\t\treturn\n\t}\n\n\tanswers := make([]*recruitmentPB.RecruitmentAnswer, 0)\n\tfor _, v := range params.Answers {\n\t\tanswers = append(answers, \u0026recruitmentPB.RecruitmentAnswer{\n\t\t\tAnswer:  v.Answer,\n\t\t\tItemKey: v.ItemID,\n\t\t})\n\t}\n\n\t_, err := self.recruitmentService.AddRecruitmentFormRecord(ctx, \u0026recruitmentPB.ByRecruitmentFormRecord{\n\t\tRecordFormRecord: \u0026recruitmentPB.RecruitmentFormRecord{\n\t\t\tMobile:          params.Mobile,\n\t\t\tName:            params.Name,\n\t\t\tMajor:           params.Major,\n\t\t\tAge:             params.Age,\n\t\t\tSchoolStudentID: params.SchoolStudentID,\n\t\t\tRecordID:        params.RecordID,\n\t\t\tDepartmentID:    params.Department,\n\t\t\tAnswers:         answers,\n\t\t},\n\t})\n\n\tif err != nil {\n\t\tErrorResponse(rsp, err)\n\t\treturn\n\t}\n\n\tSuccessResponse(rsp, D{})\n\treturn\n}\n\nfunc (self *RecruitmentHandler) GetRecruitmentFormRecordList(req *restful.Request, rsp *restful.Response) {\n\tparams := struct {\n\t\tPage       int32  `json:\"page,omitempty\"`\n\t\tLimit      int32  `json:\"limit,omitempty\"`\n\t\tDepartment string `json:\"department,omitempty\"`\n\t\tState      int32  `json:\"state,omitempty\"`\n\t\tRecordID   string `json:\"recordID,omitempty\"`\n\t}{}\n\n\tctx := context.Background()\n\n\tif err := self.Bind(req, \u0026params); err != nil {\n\t\tErrorResponse(rsp, self.Error().BadRequest(err.Error()))\n\t\treturn\n\t}\n\n\tif err := self.Validate(\u0026params); err != nil {\n\t\tErrorResponse(rsp, self.Error().BadRequest(err.Error()))\n\t\treturn\n\t}\n\n\tlistResp, err := self.recruitmentService.FindRecruitmentsFormRecordList(ctx, \u0026recruitmentPB.FindRecruitmentFormRecordRequest{\n\t\tPage:       params.Page,\n\t\tLimit:      params.Limit,\n\t\tDepartment: params.Department,\n\t\tState:      params.State,\n\t\tRecordID:   params.RecordID,\n\t})\n\n\t// listResp.\n\n\tif err != nil {\n\t\tErrorResponse(rsp, err)\n\t\treturn\n\t}\n\n\trecords := make([]*dto.RecruitmentFormRecords, 0)\n\tfor _, record := range listResp.Records {\n\t\trecords = append(records, dto.PBToRecruitmentFormRecords(record))\n\t}\n\n\tSuccessResponseWithPage(rsp, int64(params.Page), int64(params.Limit), int64(listResp.Total), records)\n\treturn\n}\n\nfunc (self *RecruitmentHandler) DownloadQRCode(req *restful.Request, rsp *restful.Response) {\n\t// self.recruitment\n\tparams := struct {\n\t\tID string `json:\"id,omitempty\"`\n\t}{}\n\n\tif err := self.BindAndValidate(req, \u0026params); err != nil {\n\t\tErrorResponse(rsp, err)\n\t\treturn\n\t}\n\n\tctx := context.Background()\n\tdetailsResp, err := self.recruitmentService.FindRecruitmentRecordDetails(ctx, \u0026recruitmentPB.ByRecruitmentID{\n\t\tID: params.ID,\n\t})\n\tif err != nil {\n\t\tErrorResponse(rsp, err)\n\t\treturn\n\t}\n\n\trecord := detailsResp.Record\n\n\tpng, err := qrcode.Encode(fmt.Sprintf(\"%s/common/recruitment?recordID=%s\", \"im.iunite.club\", record.ID), qrcode.Medium, 256)\n\n\tif err != nil {\n\t\tErrorResponse(rsp, self.Error().InternalServerError(err.Error()))\n\t\treturn\n\t}\n\n\trsp.AddHeader(ironic.HeaderContentDisposition, fmt.Sprintf(\"%s, filename=%s_qr.png\", \"attachment\", record.ID))\n\trsp.Write(png)\n\n\treturn\n}\n\nfunc (self *RecruitmentHandler) EndRecruitment(req *restful.Request, rsp *restful.Response) {\n\tctx := context.Background()\n\tparams := struct {\n\t\tRecordID string `query:\"recordID\"`\n\t}{}\n\n\tif err := self.Bind(req, \u0026params); err != nil {\n\t\tErrorResponse(rsp, self.Error().BadRequest(err.Error()))\n\t\treturn\n\t}\n\n\tif err := self.Validate(\u0026params); err != nil {\n\t\tErrorResponse(rsp, self.Error().BadRequest(err.Error()))\n\t\treturn\n\t}\n\n\t_, err := self.recruitmentService.EndRecruitment(ctx, \u0026recruitmentPB.ByRecruitmentID{ID: params.RecordID})\n\n\tif err != nil {\n\t\tErrorResponse(rsp, err)\n\t\treturn\n\t}\n\n\tSuccessResponse(rsp, D{})\n\treturn\n}\n"}}
--> request #1: textDocument/documentSymbol: {"textDocument":{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club/services/restful/handler/recruitment.go"}}
<-- result #1: textDocument/documentSymbol: [{"name":"recruitmentService","kind":8,"location":{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club/services/restful/handler/recruitment.go","range":{"start":{"line":18,"character":1},"end":{"line":18,"character":19}}},"containerName":"RecruitmentHandler"},{"name":"RecruitmentHandler","kind":5,"location":{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club/services/restful/handler/recruitment.go","range":{"start":{"line":15,"character":5},"end":{"line":15,"character":23}}}},{"name":"NewRecruitmentHandler","kind":12,"location":{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club/services/restful/handler/recruitment.go","range":{"start":{"line":21,"character":5},"end":{"line":21,"character":26}}}},{"name":"AdjustOnePost","kind":6,"location":{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club/services/restful/handler/recruitment.go","range":{"start":{"line":27,"character":32},"end":{"line":27,"character":45}}},"containerName":"*RecruitmentHandler"},{"name":"PassedOnePost","kind":6,"location":{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club/services/restful/handler/recruitment.go","range":{"start":{"line":58,"character":32},"end":{"line":58,"character":45}}},"containerName":"*RecruitmentHandler"},{"name":"RefusedOnePost","kind":6,"location":{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club/services/restful/handler/recruitment.go","range":{"start":{"line":90,"character":32},"end":{"line":90,"character":46}}},"containerName":"*RecruitmentHandler"},{"name":"GetLastestRecruitmentRecord","kind":6,"location":{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club/services/restful/handler/recruitment.go","range":{"start":{"line":119,"character":32},"end":{"line":119,"character":59}}},"containerName":"*RecruitmentHandler"},{"name":"AddRecruitmentRecord","kind":6,"location":{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club/services/restful/handler/recruitment.go","range":{"start":{"line":148,"character":32},"end":{"line":148,"character":52}}},"containerName":"*RecruitmentHandler"},{"name":"AddRecruitmentForm","kind":6,"location":{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club/services/restful/handler/recruitment.go","range":{"start":{"line":178,"character":32},"end":{"line":178,"character":50}}},"containerName":"*RecruitmentHandler"},{"name":"Value","kind":8,"location":{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club/services/restful/handler/recruitment.go","range":{"start":{"line":180,"character":2},"end":{"line":180,"character":7}}},"containerName":"Option"},{"name":"Name","kind":8,"location":{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club/services/restful/handler/recruitment.go","range":{"start":{"line":181,"character":2},"end":{"line":181,"character":6}}},"containerName":"Option"},{"name":"Option","kind":5,"location":{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club/services/restful/handler/recruitment.go","range":{"start":{"line":179,"character":6},"end":{"line":179,"character":12}}}},{"name":"Key","kind":8,"location":{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club/services/restful/handler/recruitment.go","range":{"start":{"line":185,"character":2},"end":{"line":185,"character":5}}},"containerName":"FormItem"},{"name":"Label","kind":8,"location":{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club/services/restful/handler/recruitment.go","range":{"start":{"line":186,"character":2},"end":{"line":186,"character":7}}},"containerName":"FormItem"},{"name":"Kind","kind":8,"location":{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club/services/restful/handler/recruitment.go","range":{"start":{"line":187,"character":2},"end":{"line":187,"character":6}}},"containerName":"FormItem"},{"name":"Options","kind":8,"location":{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club/services/restful/handler/recruitment.go","range":{"start":{"line":188,"character":2},"end":{"line":188,"character":9}}},"containerName":"FormItem"},{"name":"FormItem","kind":5,"location":{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club/services/restful/handler/recruitment.go","range":{"start":{"line":184,"character":6},"end":{"line":184,"character":14}}}},{"name":"GetRecruitmentFormDetails","kind":6,"location":{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club/services/restful/handler/recruitment.go","range":{"start":{"line":242,"character":32},"end":{"line":242,"character":57}}},"containerName":"*RecruitmentHandler"},{"name":"GetRecruitmentRecordDetails","kind":6,"location":{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club/services/restful/handler/recruitment.go","range":{"start":{"line":272,"character":32},"end":{"line":272,"character":59}}},"containerName":"*RecruitmentHandler"},{"name":"AddRecruitmentFormRecord","kind":6,"location":{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club/services/restful/handler/recruitment.go","range":{"start":{"line":299,"character":32},"end":{"line":299,"character":56}}},"containerName":"*RecruitmentHandler"},{"name":"ItemID","kind":8,"location":{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club/services/restful/handler/recruitment.go","range":{"start":{"line":302,"character":2},"end":{"line":302,"character":8}}},"containerName":"AnswerItem"},{"name":"Answer","kind":8,"location":{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club/services/restful/handler/recruitment.go","range":{"start":{"line":303,"character":2},"end":{"line":303,"character":8}}},"containerName":"AnswerItem"},{"name":"AnswerItem","kind":5,"location":{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club/services/restful/handler/recruitment.go","range":{"start":{"line":301,"character":6},"end":{"line":301,"character":16}}}},{"name":"GetRecruitmentFormRecordList","kind":6,"location":{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club/services/restful/handler/recruitment.go","range":{"start":{"line":359,"character":32},"end":{"line":359,"character":60}}},"containerName":"*RecruitmentHandler"},{"name":"DownloadQRCode","kind":6,"location":{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club/services/restful/handler/recruitment.go","range":{"start":{"line":404,"character":32},"end":{"line":404,"character":46}}},"containerName":"*RecruitmentHandler"},{"name":"EndRecruitment","kind":6,"location":{"uri":"file:///Users/alixez/Workspace/go/src/iunite.club/services/restful/handler/recruitment.go","range":{"start":{"line":439,"character":32},"end":{"line":439,"character":46}}},"containerName":"*RecruitmentHandler"}]
--> notif: $/setTraceNotification: {"value":"off"}
jsonrpc2 handler: notification "$/setTraceNotification" handling error: jsonrpc2: code -32601 message: method not supported: $/setTraceNotification
--> notif: $/setTraceNotification: {"value":"off"}
jsonrpc2 handler: notification "$/setTraceNotification" handling error: jsonrpc2: code -32601 message: method not supported: $/setTraceNotification
--> request #2: shutdown: null
<-- result #2: shutdown: null
--> notif: exit: null
